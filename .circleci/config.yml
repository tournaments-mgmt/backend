---
version: 2.1
executors:
  linux-x86_64:
    docker:
      - image: cimg/deploy:2025.01.1
  linux-aarch64:
    resource_class: arm.medium
    docker:
      - image: cimg/deploy:2025.01.1
jobs:
  build:
    executor: linux-x86_64
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Docker login
          command: docker login -u "${DOCKERHUB_USERNAME}" -p "${DOCKERHUB_TOKEN}"
      - run:
          name: Build image
          command: docker image build --target=prod --tag=sardylan/tournaments-mgmt-backend:${CIRCLE_SHA1} .
      - run:
          name: Publish image
          command: docker image push sardylan/tournaments-mgmt-backend:${CIRCLE_SHA1}
  test:
    executor: linux-x86_64
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Create Docker network
          command: docker network create testnet
      - run:
          name: Run PostgreSQL test server
          command: |
            docker container run \
              --detach \
              --network testnet \
              --name postgres \
              --env POSTGRES_USER=postgres \
              --env POSTGRES_PASSWORD=postgres \
              --tmpfs /var/lib/postgresql/data \
              postgres:17.3
            docker container run \
              --tty --rm \
              --network testnet \
              --name postgres_wait \
              --entrypoint /bin/bash \
              postgres:17.3 \
              -c "RETRY_COUNT=0; RETRY_MAX=15; while ! pg_isready --host=postgres; RETRY_COUNT=\"\$((\$RETRY_COUNT + 1))\"; do if [ \"\${RETRY_COUNT}\" -ge \"\${RETRY_MAX}\" ]; then exit 1; fi; sleep 1; done"
            docker container run \
              --tty --rm \
              --network testnet \
              --name postgres_init \
              --entrypoint /bin/bash \
              postgres:17.3 \
              -c "PGPASSWORD=postgres psql --host=postgres --port=5432 --username=postgres --no-password --dbname=postgres --command=\"CREATE USER tournaments_test CREATEDB ENCRYPTED PASSWORD 'tournaments_test';\""
      - run:
          name: Run Odoo tests
          command: |
            docker container run \
              --rm --tty \
              --network testnet \
              --env DB_HOST=postgres \
              --env DB_PORT=5432 \
              --env DB_USERNAME=tournaments_test \
              --env DB_PASSWORD=tournaments_test \
              --env DB_NAME=tournaments_test \
              --env MODE=odoo-test \
              sardylan/tournaments-mgmt-backend:${CIRCLE_SHA1}
      - run:
          name: Run API tests
          command: |
            docker container run \
              --rm --tty \
              --network testnet \
              --env DB_HOST=postgres \
              --env DB_PORT=5432 \
              --env DB_USERNAME=tournaments_test \
              --env DB_PASSWORD=tournaments_test \
              --env DB_NAME=tournaments_test \
              --env MODE=api-test \
              sardylan/tournaments-mgmt-backend:${CIRCLE_SHA1}
      - run:
          name: Close PostgreSQL test server
          command: |
            docker container stop postgres
            docker container rm postgres
workflows:
  test_and_build:
    jobs:
      - build:
          context:
            - "Docker Hub"
      - test:
          context:
            - "Docker Hub"
          requires:
            - build
